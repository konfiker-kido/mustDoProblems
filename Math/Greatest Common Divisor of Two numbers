
The greatest common divisor (GCD) of two or more numbers is the greatest common factor number that divides them, exactly. 
It is also called the highest common factor (HCF). 
For example, the greatest common factor of 15 and 10 is 5, since both the numbers can be divided by 5.

15/5 = 3

10/5 = 2


==============================  C++  Naive Approch============================================
#include <iostream>
#include <limits.h>
#include <cmath>
using namespace std;


 int gcdNumber(int a,int b){
     
      int minNum=INT_MAX;
      int maxNum=INT_MIN;
     
      if(a>b)
      {
        maxNum=a;
        minNum=b;
      }else{
           maxNum=b;
           minNum=a;
      }
      
   int gcd=1;
      for(int i=1;i<=maxNum;i++){
        if(minNum%i==0 and maxNum%i==0){
             gcd=max(gcd,i);
        }
      }
      return gcd;
  }

int main()
{
    cout<<gcdNumber(15,10);

    return 0;
}

=================================  Euclid Method =======================================================================

a=24  => 2 *  2 * 2 *3
b=42  =>  2 * 3 * 7       
=>  HCF 6 (GCD)


if we 
42 - 24 = 18  (GCD of 24 and 16 will be same as 42 and 24)
24 - 18  = 6   the same way we can do, 42 % 12 = 6 
18 - 6 =  12
12 - 6 =   6
6 - 6  =   0


========================  c++ optimized solution ========================

int gcd(int a, int b){

   while(b){
     int rem=a%b;
     a=b;
     b=rem; 
} 
return a;

