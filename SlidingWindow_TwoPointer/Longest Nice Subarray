Input: nums = [1,3,8,48,10]
Output: 3
Explanation: The longest nice subarray is [3,8,48]. This subarray satisfies the conditions:
- 3 AND 8 = 0.
- 3 AND 48 = 0.
- 8 AND 48 = 0.


Input: nums = [3,1,5,11,13]
Output: 1
Explanation: The length of the longest nice subarray is 1. Any subarray of length 1 can be chosen.

-------------------------  Code -------------------------------------------------------------------------------------------





---------------------------------------  Optimised Approach ------------------------------------------------------------------------------------
class Solution {
public:
    int longestNiceSubarray(vector<int>& nums) {
        
       int maxLen=0;

       int left=0,right=0;
       int bits=0;  // to keep track of setBits 
       int n=nums.size();
       while(right<n){

           while((bits & nums[right])!=0){ // if and are not 0
              bits^=nums[left]; // remove setBits of left ele from bits (xor will make zero with same number )
              left++;
           }

           bits |=nums[right]; // adding setBit of nums[right] to bits
           maxLen=max(maxLen,right-left+1); 
           right++; // expanding the window
       }
      
        return maxLen;
    }
};
