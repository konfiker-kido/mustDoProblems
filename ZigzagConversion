class Solution {
public:
    string convert(string s, int numRows) {
        
        // Easge case if numRows is 1 return the exact string
        if(numRows==1)
          return s;
        vector<string> v(numRows);
        bool direction=true;


      int index=0,i=0; // here i is Row to insert and index is for traversing the given string s
      int size=s.length();
        while(true){
            if(direction){
                while(i<numRows and index<size){
                    v[i++].push_back(s[index++]);
                }
                i=numRows-2;  // updating the i according to direction ( Bottom - to - Top )
            }else{
                while(i>=0 and index<size){
                    v[i--].push_back(s[index++]);
                }
                i=1; // updating the i according to direction ( Top - to -Bottom)
            }
            // condition for termininating the loop 
            if(index>=size) break;

            // changing the direction
           direction=!direction;
        }

        string ans="";

        // now concatinating all the String
        for(string str:v){
            ans+=str;
        }

        return ans;
    }
};
