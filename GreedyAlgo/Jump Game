Jump Game (Leetcode)

You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.

Return true if you can reach the last index, or false otherwise.

Example 1:

Input: nums = [2,3,1,1,4]
Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.
Example 2:

Input: nums = [3,2,1,0,4]
Output: false
Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.


==========================================  Intution ======================================================================================

 -> pick every element and check how far you can go (that maxIndex = max(nums[i]+i,maxIndex);
 -> at every index you have to check that, that index should not be more than maxIndex ( return false, in this case)


==========================================  Solution   ==========================================================================================================================
class Solution {
public:
    bool canJump(vector<int>& nums) {
        
        int maxIndex=0;
        for(int i=0;i<nums.size();i++){
              if(i>maxIndex)  // index should not exceed maxIndex
                return false;
                maxIndex=max(nums[i]+i,maxIndex);
        }

        return true;
    }
};
