42. Trapping Rain Water

Hard

Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.
Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.
Example 2:

Input: height = [4,2,0,3,2,5]
Output: 9

===============================================  Using Two Pointer Approach  ==========================================================================

class Solution {
public:
    int trap(vector<int>& arr) {
         
        int n=arr.size();
        int ans=0;
        int leftBar=arr[0];
        int rightBar=arr[n-1];
        int left=0;
        int right=n-1;
        
        while(left<right){
            
            if(leftBar<rightBar){
                // it will not store any amount of water, so change the the leftBar
                if(arr[left]>leftBar)
                 leftBar=arr[left]; // update the leftBar
                 else
                    ans+=leftBar-arr[left++]; // add to ans and move the left pointer
            }
            else{
                
                if(arr[right]>rightBar)
                    rightBar=arr[right]; // update the rightBar
                else
                    ans+=rightBar-arr[right--]; // add to ans and update the right pointer
                
            }
        }
        return ans;
    }
};
